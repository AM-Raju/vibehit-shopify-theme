<!-- CND for swipperjs -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

{% style %}
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto;
    !important;
    height: 20px
  }

  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 20px
  }

  .swiper-pagination {
    bottom: 0 !important
  }
  .swiper-pagination-bullet-active {
    background: black !important;

  }
{% endstyle %}

<div class="max-w-6xl mx-auto my-8">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    <div class="product--medias ">
      <!-- Product Media : Desktop -->
      <div class="hidden md:block border ">
        {% for media in product.media %}
          <div class="w-[550px] overflow-hidden mx-auto ">
            {% render 'product-media', media: media %}
          </div>
        {% endfor %}
      </div>
      <!-- Product Media : Mobile -->
      <div class="md:hidden">
        <div class="swiper h-[22rem]">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class=" h-80  overflow-hidden mx-auto ">
                  {% render 'product-media', media: media %}
                </div>
              </div>
            {% endfor %}
          </div>
          <!-- Swiper navigation -->
          <div class="swiper-pagination "></div>
          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>
        </div>
      </div>
    </div>
    <!-- Product Info -->
    <div class="product--information ml-10 sticky top-5 p-2 h-fit">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        {% comment %} Input field to activate add to cart button {% endcomment %}
        <input
          type="hidden"
          name="id"
          value="{{ selected_variant.id }}"
        >
        {% comment %} End: button activation {% endcomment %}

        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}
              <div class="my-3">
                <span class="text-md text-gray-500"> {{ product.vendor }}</span>
              </div>
            {% when 'product_title' %}
              <div class="my-3">
                <h1 class="text-3xl text-gray-900 font-semibold">
                  {{ product.title }}
                </h1>
              </div>
            {% when 'product_price' %}
              <div class="my-3" id="price-{{ section.id }}">
                <span class="text-base line-through text-red-500">
                  {{ selected_variant.compare_at_price | money -}}
                </span>

                <span class="text-lg font-semibold text-gray-500"> {{ selected_variant.price | money }}</span>

                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                {% endif %}
              </div>
            {% when 'size_variant' %}
              {% comment %} Product Options {% endcomment %}
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                      <div class="my-2">
                        <select
                          name="options[{{ option.name | escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border p-3 outline-none"
                        >
                          {% for value in option.values %}
                            <option
                              value="{{ value |  escape }}"
                              {% if option.selected_value == value %}
                                selected="selected"
                              {% endif %}
                            >
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>
                      <script type="application/json">
                        {{ product.variants |  json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>
            {% when 'product_qty' %}
              {% comment %} Product Quantity {% endcomment %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    class="w-full p-3 border"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    value="1"
                    ,
                    min="1"
                  >
                </div>
              </div>
            {% when 'product_desc' %}
              {% comment %} Product description {% endcomment %}
              <div class="mt-6">
                <h3 class="text-xl font-semibold">Description</h3>
                <p class="text-gray-700">{{ product.description }}</p>
              </div>
            {% when 'add_to_cart_button' %}
              {% comment %} Add to cart button {% endcomment %}
              <div class="my-3">
                <button
                  type="submit"
                  name="add"
                  {% if selected_variant.available == false %}
                    disabled
                  {% endif %}
                  class="w-full px-5 py-2 bg-gray-900 text-white hover:bg-gray-500 transition-all duration-500"
                >
                  {% if selected_variant.available == false %}
                    Sold Out
                  {% else %}
                    Add to Cart
                  {% endif %}
                </button>
              </div>
          {% endcase %}
        {% endfor %}
      {% endform %}
    </div>
  </div>
</div>

<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('change', this.onVariantChange);
    }

    // Method: Actions happened on variant change.
    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();
      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    // Method: Get selected options
    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);

      console.log('Options', this.options);
    }

    // Method: Get all variant JSON data
    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    // Method: Get selected variant data
    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);
        if (findings) return variant;
      });

      console.log('Current Variant', this.currentVariant);
    }

    // Method: Update Url
    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    // Method: Update form id
    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    // Update price
    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((res) => res.text())
        .then((resText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(resText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);
          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
  }

  customElements.define('variant-selector', VariantSelector);
</script>

<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',
    loop: true,

    pagination: {
      el: '.swiper-pagination',
    },

    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
  });
</script>

{% schema %}
{
  "name": "Products",
  "settings": [],
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "product_title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "product_price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "size_variant",
      "name": "Variant",
      "limit": 1
    },
    {
      "type": "product_qty",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "product_desc",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "add_to_cart_button",
      "name": "Button",
      "limit": 1
    }
  ]
}
{% endschema %}
